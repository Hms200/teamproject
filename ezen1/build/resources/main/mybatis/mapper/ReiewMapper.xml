<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ezen.dao.IreviewDAO">

	<!-- goods_idx를 받아 MALL_REVIEW에서 해당 idx를 가진 모든 data를 가져옴 -->
	<select id="getReviewList">
		SELECT * FROM MALL_REVIEW WHERE goods_idx = #{goods_idx}
	</select>
	
	<insert id="insertReview" parameterType="com.ezen.dto.Review">
		INSERT INTO MALL_REVIEW (review_idx, user_idx, goods_idx, review_contents, review_star, review_isreplied, review_reply, review_date, review_reply_date)
			VALUES (MALL_REVIEW_seq.nextval, #{user_idx}, #{goods_idx}, #{review_contents},#{review_star} ,#{review_isreplied}, #{review_reply}, sysdate , null)
	</insert>
	
	<!-- 모든 리뷰 가져옴 -->
	<select id="getAllReviews" resultType="com.ezen.dto.Review">
		SELECT * FROM ( 
			SELECT ROWNUM AS rnum, mall_review.* FROM(
				SELECT * FROM mall_review ORDER BY review_idx ASC )
			 mall_review)
			WHERE rnum BETWEEN #{param1} AND #{param2} order by review_idx DESC
	</select>
	
	<select id="countOfReviews" resultType="int">
		SELECT COUNT(*) FROM mall_review
	</select>
	
	<!-- 리뷰 답글달기-->
	<update id="updateReviewReply">
		UPDATE mall_review SET review_reply = #{param2}, review_reply_date = sysdate, review_isreplied = 1 WHERE review_idx = ${param1}
	</update>
	
	<!-- 가장 최신리뷰의 idx를 가져옴 -->
	<select id="getNewestReviewIdx" resultType="int">
		SELECT MAX(REVIEW_IDX) FROM MALL_REVIEW
	</select>
</mapper>