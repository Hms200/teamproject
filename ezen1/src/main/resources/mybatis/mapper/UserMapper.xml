<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ezen.dao.IuserDAO">

	<!-- MALL_USER에서 사용자 아이디를 조회해서 가져옴. -->
	<select id="getUserID" resultType="String">
		SELECT * FROM MALL_USER WHERE user_id= #{user_id}
	</select>
	
	<!-- MALL_USER에서 사용자 비밀번호를 조회해서 가져옴. -->
	<select id="getUserPw" resultType="String">
		SELECT user_pw FROM MALL_USER WHERE user_id= ${user_idx}
	</select>
	
	<!-- MALL_USER에서 사용자 아이디를 이름과 이메일을 받아서 가져옴. -->
	<select id="getUserIdByFindId" resultType="String">
		SELECT user_id FROM MALL_USER WHERE user_name= #{ param1 } AND user_email= #{ param2 }
	</select>
	
	<!-- MALL_USER에서 사용자 비밀번호를 이름 아이디, 이메일을 받아서 가져옴. -->
	<select id="getUserPwByFindPw" resultType="String">
		SELECT user_pw FROM MALL_USER WHERE user_id= #{ param1 } AND user_name= #{ param2 } AND user_email= #{ param3 }
	</select>
	
	<!-- MALL_USER에서 사용자 아이디를 받아 해당하는 아이디의 인덱스를 가져옴 -->
	<select id="getUserIdx" resultType="int">
		SELECT user_idx FROM MALL_USER WHERE user_id= #{user_id}
	</select>
	
	<!-- 유저를 받아 MALL_USER에 인서트 -->
	<insert id="insertUser" parameterType="com.ezen.dto.User">
		INSERT INTO MALL_USER (user_idx, user_id, user_pw, user_name, user_phone, user_address, user_email, join_date)
		VALUES (mall_user_seq.nextval, #{user_id}, #{user_pw}, #{user_name}, #{user_phone}, #{user_address}, #{user_email}, sysdate)
	</insert>
	
	<!-- 소셜로그인회원 정보저장 -->
	<insert id="insertUserLoginedByOAuth" parameterType="com.ezen.dto.User">
		INSERT INTO mall_user (user_idx, user_id, user_name, user_email, join_date, user_provider)
			VALUES (mall_user_seq.nextval, #{user_id}, #{user_name}, #{user_email}, sysdate, #{user_provider})
	</insert>
	
	<!-- 유저 아이디를 받아 MALL_USER에서 일치하는 정보 딜리트. -->
	<delete id="deleteUser">
		DELETE FROM MALL_USER WHERE user_idx= ${ user_idx }
	</delete>
	
	<!-- 유저 아이디를 받아 MALL_USER에서 일치하는 회원의 모든 데이터를 가져옴 -->
	<select id="getMemberInfo" resultType="com.ezen.dto.User">
	 SELECT * FROM MALL_USER WHERE user_id = #{user_id}
	</select>
	
	<!-- 유저를 받아 MALL_USER의 일치하는 아이디에 업데이트 -->
	<update id="UpdateMemberInfo">
		UPDATE MALL_USER SET user_pw = #{user_pw}, user_name = #{user_name}, user_email = #{user_email}, user_phone = #{user_phone}, user_address = #{user_address} WHERE user_id = #{user_id}
	</update>
	
	<!-- user_idx로 user 정보 가져오기 -->
	<select id="getMemberInfoByUserIdx" resultType="com.ezen.dto.User">
		SELECT * FROM mall_user WHERE user_idx = ${param1}
	</select>
	
	<!-- 임시 비밀번호 발급 -->
	<update id="updateUserPwByDisposablePassword">
		UPDATE mall_user SET user_pw = #{param2} where user_id = #{param1}
	</update>
	
	<!-- 검색용 쿼리들-->
	<!-- Id로 검색 -->
	<select id="searchUserById" resultType="com.ezen.dto.User">
		SELECT * FROM mall_user WHERE user_id LIKE '%'||#{searchText}||'%'
	</select>
	
	
	<!-- user_idx로 user_id 가져오기 -->
	<select id="getUserIdByUserIdx" resultType="String">
		SELECT user_id FROM mall_user WHERE user_idx = ${param1}
	</select>

</mapper>